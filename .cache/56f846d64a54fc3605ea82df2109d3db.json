{"dependencies":[{"name":"/home/santo/sites/libraryTest/v-form/package.json","includedInParent":true,"mtime":1530697737725},{"name":"/home/santo/sites/libraryTest/v-form/.babelrc","includedInParent":true,"mtime":1530677681306}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar typeValidators = {\n    isNumber: function isNumber() {\n        return function (value, success, error) {\n            var num = Number(value);\n            if (typeof num === 'number' && !isNaN(num) && typeof value !== 'boolean') {\n                success('done');\n            }\n\n            error('error');\n        };\n    },\n    isFunction: function isFunction(functionToCheck) {\n        return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n    }\n};\n\nexports.default = typeValidators;","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"plugins/type.js","original":{"line":1,"column":0}},{"name":"typeValidators","generated":{"line":6,"column":4},"source":"plugins/type.js","original":{"line":1,"column":6}},{"generated":{"line":6,"column":21},"source":"plugins/type.js","original":{"line":1,"column":23}},{"name":"isNumber","generated":{"line":7,"column":0},"source":"plugins/type.js","original":{"line":2,"column":4}},{"generated":{"line":7,"column":14},"source":"plugins/type.js","original":{"line":2,"column":14}},{"generated":{"line":7,"column":34},"source":"plugins/type.js","original":{"line":2,"column":25}},{"generated":{"line":8,"column":0},"source":"plugins/type.js","original":{"line":3,"column":8}},{"generated":{"line":8,"column":15},"source":"plugins/type.js","original":{"line":3,"column":15}},{"name":"value","generated":{"line":8,"column":25},"source":"plugins/type.js","original":{"line":3,"column":25}},{"generated":{"line":8,"column":30},"source":"plugins/type.js","original":{"line":3,"column":15}},{"name":"success","generated":{"line":8,"column":32},"source":"plugins/type.js","original":{"line":3,"column":32}},{"generated":{"line":8,"column":39},"source":"plugins/type.js","original":{"line":3,"column":15}},{"name":"error","generated":{"line":8,"column":41},"source":"plugins/type.js","original":{"line":3,"column":41}},{"generated":{"line":8,"column":46},"source":"plugins/type.js","original":{"line":3,"column":15}},{"generated":{"line":8,"column":48},"source":"plugins/type.js","original":{"line":3,"column":48}},{"generated":{"line":9,"column":0},"source":"plugins/type.js","original":{"line":4,"column":12}},{"name":"num","generated":{"line":9,"column":16},"source":"plugins/type.js","original":{"line":4,"column":18}},{"name":"Number","generated":{"line":9,"column":22},"source":"plugins/type.js","original":{"line":4,"column":24}},{"name":"value","generated":{"line":9,"column":29},"source":"plugins/type.js","original":{"line":4,"column":31}},{"generated":{"line":9,"column":34},"source":"plugins/type.js","original":{"line":4,"column":24}},{"generated":{"line":9,"column":35},"source":"plugins/type.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":0},"source":"plugins/type.js","original":{"line":5,"column":12}},{"generated":{"line":10,"column":16},"source":"plugins/type.js","original":{"line":6,"column":16}},{"name":"num","generated":{"line":10,"column":23},"source":"plugins/type.js","original":{"line":6,"column":23}},{"generated":{"line":10,"column":26},"source":"plugins/type.js","original":{"line":6,"column":16}},{"generated":{"line":10,"column":31},"source":"plugins/type.js","original":{"line":6,"column":31}},{"generated":{"line":10,"column":39},"source":"plugins/type.js","original":{"line":6,"column":16}},{"generated":{"line":10,"column":43},"source":"plugins/type.js","original":{"line":7,"column":16}},{"name":"isNaN","generated":{"line":10,"column":44},"source":"plugins/type.js","original":{"line":7,"column":17}},{"name":"num","generated":{"line":10,"column":50},"source":"plugins/type.js","original":{"line":7,"column":23}},{"generated":{"line":10,"column":53},"source":"plugins/type.js","original":{"line":7,"column":17}},{"generated":{"line":10,"column":54},"source":"plugins/type.js","original":{"line":6,"column":16}},{"generated":{"line":10,"column":58},"source":"plugins/type.js","original":{"line":8,"column":16}},{"name":"value","generated":{"line":10,"column":65},"source":"plugins/type.js","original":{"line":8,"column":23}},{"generated":{"line":10,"column":70},"source":"plugins/type.js","original":{"line":8,"column":16}},{"generated":{"line":10,"column":75},"source":"plugins/type.js","original":{"line":8,"column":33}},{"generated":{"line":10,"column":84},"source":"plugins/type.js","original":{"line":5,"column":12}},{"generated":{"line":10,"column":86},"source":"plugins/type.js","original":{"line":9,"column":14}},{"name":"success","generated":{"line":11,"column":0},"source":"plugins/type.js","original":{"line":10,"column":16}},{"generated":{"line":11,"column":24},"source":"plugins/type.js","original":{"line":10,"column":24}},{"generated":{"line":11,"column":30},"source":"plugins/type.js","original":{"line":10,"column":16}},{"generated":{"line":12,"column":0},"source":"plugins/type.js","original":{"line":11,"column":13}},{"name":"error","generated":{"line":14,"column":0},"source":"plugins/type.js","original":{"line":13,"column":12}},{"generated":{"line":14,"column":18},"source":"plugins/type.js","original":{"line":13,"column":18}},{"generated":{"line":14,"column":25},"source":"plugins/type.js","original":{"line":13,"column":12}},{"generated":{"line":15,"column":0},"source":"plugins/type.js","original":{"line":14,"column":9}},{"generated":{"line":15,"column":9},"source":"plugins/type.js","original":{"line":3,"column":8}},{"generated":{"line":16,"column":0},"source":"plugins/type.js","original":{"line":15,"column":5}},{"generated":{"line":16,"column":5},"source":"plugins/type.js","original":{"line":1,"column":23}},{"name":"isFunction","generated":{"line":17,"column":0},"source":"plugins/type.js","original":{"line":16,"column":4}},{"generated":{"line":17,"column":16},"source":"plugins/type.js","original":{"line":16,"column":16}},{"name":"functionToCheck","generated":{"line":17,"column":36},"source":"plugins/type.js","original":{"line":16,"column":25}},{"generated":{"line":17,"column":51},"source":"plugins/type.js","original":{"line":16,"column":16}},{"generated":{"line":17,"column":53},"source":"plugins/type.js","original":{"line":16,"column":42}},{"generated":{"line":18,"column":0},"source":"plugins/type.js","original":{"line":17,"column":8}},{"name":"functionToCheck","generated":{"line":18,"column":15},"source":"plugins/type.js","original":{"line":18,"column":12}},{"generated":{"line":18,"column":34},"source":"plugins/type.js","original":{"line":19,"column":12}},{"name":"toString","generated":{"line":18,"column":37},"source":"plugins/type.js","original":{"line":19,"column":15}},{"generated":{"line":18,"column":45},"source":"plugins/type.js","original":{"line":19,"column":12}},{"name":"call","generated":{"line":18,"column":46},"source":"plugins/type.js","original":{"line":19,"column":24}},{"generated":{"line":18,"column":50},"source":"plugins/type.js","original":{"line":19,"column":12}},{"name":"functionToCheck","generated":{"line":18,"column":51},"source":"plugins/type.js","original":{"line":19,"column":29}},{"generated":{"line":18,"column":66},"source":"plugins/type.js","original":{"line":19,"column":12}},{"generated":{"line":18,"column":72},"source":"plugins/type.js","original":{"line":19,"column":50}},{"generated":{"line":18,"column":91},"source":"plugins/type.js","original":{"line":17,"column":8}},{"generated":{"line":19,"column":0},"source":"plugins/type.js","original":{"line":21,"column":5}},{"generated":{"line":20,"column":0},"source":"plugins/type.js","original":{"line":1,"column":23}},{"generated":{"line":20,"column":1},"source":"plugins/type.js","original":{"line":1,"column":0}},{"name":"typeValidators","generated":{"line":22,"column":18},"source":"plugins/type.js","original":{"line":24,"column":15}}],"sources":{"plugins/type.js":"const typeValidators = {\n    isNumber: function() {\n        return function (value, success, error) {  \n            const num = Number(value)\n            if (\n                typeof num === 'number' &&\n                !isNaN(num) &&\n                typeof value !== 'boolean'\n            ) {\n                success('done')\n            }\n    \n            error('error')\n        }\n    },\n    isFunction: function(functionToCheck) {\n        return (\n            functionToCheck &&\n            {}.toString.call(functionToCheck) === '[object Function]'\n        )\n    },\n}\n\nexport default typeValidators"},"lineCount":null}},"hash":"e0bd42a81ced45f2d7915f6277e3cc39","cacheData":{"env":{}},"id":16}